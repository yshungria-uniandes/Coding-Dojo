-- Desactivar el modo seguro de actualizaciones SQL
SET SQL_SAFE_UPDATES = 0;

USE esquema_amistades;

-- Consulta: crea 6 usuarios nuevos
-- INSERT INTO users (first_name, last_name) VALUES ('Amy', 'Giver'), ('Eli', 'Byers'), ('Big', 'Bird'), ('La rana', 'René'), ('Marky', 'Mark'), ('La rana', 'René');

-- Consulta: haz que el usuario 1 sea amigo del usuario 2, 4 y 6
-- INSERT INTO friendships (user_id, friend_id) VALUES (1, 2), (1, 4), (1, 6);

-- Consulta: haz que el usuario 2 sea amigo del usuario 1, 3 y 5
-- INSERT INTO friendships (user_id, friend_id) VALUES (2, 1), (2, 3), (2, 5);


-- Consulta: haz que el usuario 3 sea amigo del usuario 2 y 5
-- INSERT INTO friendships (user_id, friend_id) VALUES (3, 2), (3, 5);

-- Consulta: haz que el usuario 4 sea amigo del usuario 3
-- INSERT INTO friendships (user_id, friend_id) VALUES (4, 3);

-- Consulta: haz que el usuario 5 sea amigo del usuario 1 y 6
-- INSERT INTO friendships (user_id, friend_id) VALUES (5, 1), (5, 6);

-- -- Consulta: haz que el usuario 6 sea amigo del usuario 2 y 3
-- INSERT INTO friendships (user_id, friend_id) VALUES (6, 2), (6, 3);

-- Consulta: muestra las relaciones creadas como se muestra en la imagen de arriba
-- SELECT u1.first_name, u1.last_name, u2.first_name AS friend_first_name, u2.last_name AS friend_last_name
-- FROM friendships AS f
-- JOIN users AS u1 ON f.user_id = u1.id
-- JOIN users AS u2 ON f.friend_id = u2.id
-- ORDER BY u1.first_name, u2.first_name;

-- Consulta NINJA: Devuelve todos los usuarios que son amigos del primer usuario, asegúrate de que sus nombres se muestren en los resultados.
-- SELECT u2.first_name, u2.last_name
-- FROM friendships AS f
-- JOIN users AS u1 ON f.user_id = u1.id
-- JOIN users AS u2 ON f.friend_id = u2.id
-- WHERE u1.id = 1;

-- Consulta NINJA: Devuelve el recuento de todas las amistades
-- SELECT COUNT(*) AS total_amistades
-- FROM friendships;

-- Consulta NINJA: averigua quién tiene más amigos y devuelve la cuenta de sus amigos.
-- SELECT u1.first_name, u1.last_name, COUNT(*) AS total_amigos
-- FROM friendships AS f
-- JOIN users AS u1 ON f.user_id = u1.id
-- GROUP BY u1.id
-- ORDER BY total_amigos DESC
-- LIMIT 1;

-- Consulta NINJA: Devuelve los amigos del tercer usuario en orden alfabético
-- SELECT u2.first_name, u2.last_name
-- FROM friendships AS f
-- JOIN users AS u1 ON f.user_id = u1.id
-- JOIN users AS u2 ON f.friend_id = u2.id
-- WHERE u1.id = 3
-- ORDER BY u2.first_name, u2.last_name;